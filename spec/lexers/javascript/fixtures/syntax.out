[#<Token Keyword::Declaration>, "function"]
[#<Token Text>, " "]
[#<Token Name::Other>, "foo"]
[#<Token Punctuation>, "()"]
[#<Token Text>, " "]
[#<Token Punctuation>, "{"]
[#<Token Text>, "\n  "]
[#<Token Keyword>, "return"]
[#<Token Text>, " "]
[#<Token Literal::Number::Integer>, "42"]
[#<Token Punctuation>, ";"]
[#<Token Text>, "\n"]
[#<Token Punctuation>, "}"]
[#<Token Text>, "\n\n"]
[#<Token Keyword>, "if"]
[#<Token Text>, " "]
[#<Token Punctuation>, "("]
[#<Token Name::Other>, "x"]
[#<Token Text>, " "]
[#<Token Operator>, "==="]
[#<Token Text>, " "]
[#<Token Name::Other>, "y"]
[#<Token Punctuation>, ")"]
[#<Token Text>, " "]
[#<Token Punctuation>, "{"]
[#<Token Text>, "\n  "]
[#<Token Name::Other>, "console"]
[#<Token Punctuation>, "."]
[#<Token Name::Other>, "log"]
[#<Token Punctuation>, "("]
[#<Token Name::Other>, "x"]
[#<Token Punctuation>, ");"]
[#<Token Text>, "\n"]
[#<Token Punctuation>, "}"]
[#<Token Text>, " "]
[#<Token Keyword>, "else"]
[#<Token Text>, " "]
[#<Token Punctuation>, "{"]
[#<Token Text>, "\n  "]
[#<Token Name::Other>, "console"]
[#<Token Punctuation>, "."]
[#<Token Name::Other>, "log"]
[#<Token Punctuation>, "("]
[#<Token Name::Other>, "y"]
[#<Token Punctuation>, ");"]
[#<Token Text>, "\n"]
[#<Token Punctuation>, "}"]
[#<Token Text>, "\n\n"]
[#<Token Keyword::Declaration>, "var"]
[#<Token Text>, " "]
[#<Token Name::Other>, "bar"]
[#<Token Punctuation>, ";"]
[#<Token Text>, "\n\n"]
[#<Token Keyword>, "for"]
[#<Token Text>, " "]
[#<Token Punctuation>, "("]
[#<Token Keyword::Declaration>, "let"]
[#<Token Text>, " "]
[#<Token Name::Other>, "i"]
[#<Token Text>, " "]
[#<Token Operator>, "="]
[#<Token Text>, " "]
[#<Token Literal::Number::Integer>, "0"]
[#<Token Punctuation>, ";"]
[#<Token Text>, " "]
[#<Token Name::Other>, "i"]
[#<Token Text>, " "]
[#<Token Operator>, "<"]
[#<Token Text>, " "]
[#<Token Literal::Number::Integer>, "100"]
[#<Token Punctuation>, ";"]
[#<Token Text>, " "]
[#<Token Name::Other>, "i"]
[#<Token Operator>, "++"]
[#<Token Punctuation>, ")"]
[#<Token Text>, " "]
[#<Token Punctuation>, "{"]
[#<Token Text>, "\n  "]
[#<Token Name::Other>, "console"]
[#<Token Punctuation>, "."]
[#<Token Name::Other>, "log"]
[#<Token Punctuation>, "("]
[#<Token Name::Other>, "bar"]
[#<Token Punctuation>, ");"]
[#<Token Text>, "\n"]
[#<Token Punctuation>, "}"]
[#<Token Text>, "\n\n"]
[#<Token Keyword::Declaration>, "class"]
[#<Token Text>, " "]
[#<Token Name::Other>, "Foo"]
[#<Token Text>, " "]
[#<Token Punctuation>, "{"]
[#<Token Text>, "\n  "]
[#<Token Keyword::Declaration>, "constructor"]
[#<Token Punctuation>, "("]
[#<Token Name::Other>, "x"]
[#<Token Punctuation>, ","]
[#<Token Text>, " "]
[#<Token Name::Other>, "y"]
[#<Token Punctuation>, ")"]
[#<Token Text>, " "]
[#<Token Punctuation>, "{"]
[#<Token Text>, "\n    "]
[#<Token Keyword>, "this"]
[#<Token Punctuation>, "."]
[#<Token Name::Other>, "x"]
[#<Token Text>, " "]
[#<Token Operator>, "="]
[#<Token Text>, " "]
[#<Token Name::Other>, "x"]
[#<Token Punctuation>, ";"]
[#<Token Text>, "\n    "]
[#<Token Keyword>, "this"]
[#<Token Punctuation>, "."]
[#<Token Name::Other>, "y"]
[#<Token Text>, " "]
[#<Token Operator>, "="]
[#<Token Text>, " "]
[#<Token Name::Other>, "y"]
[#<Token Punctuation>, ";"]
[#<Token Text>, "\n  "]
[#<Token Punctuation>, "}"]
[#<Token Text>, "\n"]
[#<Token Punctuation>, "}"]
[#<Token Text>, "\n\n"]
[#<Token Keyword::Declaration>, "class"]
[#<Token Text>, " "]
[#<Token Name::Other>, "Bar"]
[#<Token Text>, " "]
[#<Token Keyword::Declaration>, "extends"]
[#<Token Text>, " "]
[#<Token Name::Other>, "Foo"]
[#<Token Text>, " "]
[#<Token Punctuation>, "{"]
[#<Token Text>, "\n  "]
[#<Token Keyword::Declaration>, "get"]
[#<Token Text>, " "]
[#<Token Name::Other>, "z"]
[#<Token Punctuation>, "()"]
[#<Token Text>, " "]
[#<Token Punctuation>, "{"]
[#<Token Text>, "\n    "]
[#<Token Keyword>, "return"]
[#<Token Text>, " "]
[#<Token Keyword>, "this"]
[#<Token Punctuation>, "."]
[#<Token Name::Other>, "x"]
[#<Token Text>, " "]
[#<Token Operator>, "+"]
[#<Token Text>, " "]
[#<Token Keyword>, "this"]
[#<Token Punctuation>, "."]
[#<Token Name::Other>, "y"]
[#<Token Punctuation>, ";"]
[#<Token Text>, "\n  "]
[#<Token Punctuation>, "}"]
[#<Token Text>, "\n"]
[#<Token Punctuation>, "}"]
[#<Token Text>, "\n\n"]
[#<Token Keyword::Declaration>, "const"]
[#<Token Text>, " "]
[#<Token Name::Other>, "bar"]
[#<Token Text>, " "]
[#<Token Operator>, "="]
[#<Token Text>, " "]
[#<Token Keyword>, "new"]
[#<Token Text>, " "]
[#<Token Name::Other>, "Bar"]
[#<Token Punctuation>, "("]
[#<Token Literal::Number::Integer>, "1"]
[#<Token Punctuation>, ","]
[#<Token Text>, " "]
[#<Token Literal::Number::Integer>, "2"]
[#<Token Punctuation>, ");"]
[#<Token Text>, "\n"]
