[#<Token Literal::Number::Integer>, "42"]
[#<Token Text>, "\n"]
[#<Token Literal::Number::Float>, "3.14"]
[#<Token Text>, "\n"]
[#<Token Literal::String::Char>, "?x"]
[#<Token Text>, "\n"]
[#<Token Literal::String::Double>, "\"foo\""]
[#<Token Text>, "\n"]
[#<Token Literal::String::Single>, "'foo'"]
[#<Token Text>, "\n"]
[#<Token Literal::String::Backtick>, "`foo`"]
[#<Token Text>, "\n"]
[#<Token Literal::String::Double>, "\"foo "]
[#<Token Literal::String::Interpol>, "\#{"]
[#<Token Name>, "bar"]
[#<Token Literal::String::Interpol>, "}"]
[#<Token Literal::String::Double>, " baz\""]
[#<Token Text>, "\n"]
[#<Token Literal::String::Single>, "'foo \#{bar} baz'"]
[#<Token Text>, "\n"]
[#<Token Literal::String::Other>, "%(foo bar baz)"]
[#<Token Text>, "\n"]
[#<Token Literal::String::Other>, "%q(foo bar baz)"]
[#<Token Text>, "\n"]
[#<Token Literal::String::Other>, "%w(foo bar baz)"]
[#<Token Text>, "\n"]
[#<Token Literal::String::Regex>, "/foo bar/"]
[#<Token Text>, "\n"]
[#<Token Literal::String::Regex>, "/foo bar/m"]
[#<Token Text>, "\n"]
[#<Token Literal::String::Regex>, "%r(\n  foo\n  bar\n)x"]
[#<Token Text>, "\n"]
[#<Token Punctuation>, "[]"]
[#<Token Text>, "\n"]
[#<Token Punctuation>, "["]
[#<Token Literal::Number::Integer>, "1"]
[#<Token Punctuation>, ","]
[#<Token Text>, " "]
[#<Token Literal::Number::Integer>, "2"]
[#<Token Punctuation>, ","]
[#<Token Text>, " "]
[#<Token Literal::Number::Integer>, "3"]
[#<Token Punctuation>, "]"]
[#<Token Text>, "\n"]
[#<Token Punctuation>, "{"]
[#<Token Literal::String::Symbol>, "foo: "]
[#<Token Literal::String::Double>, "\"bar\""]
[#<Token Punctuation>, "}"]
[#<Token Text>, "\n"]
[#<Token Punctuation>, "{"]
[#<Token Literal::String::Double>, "\"foo\""]
[#<Token Text>, " "]
[#<Token Operator>, "=>"]
[#<Token Text>, " "]
[#<Token Literal::String::Double>, "\"bar\""]
[#<Token Punctuation>, "}"]
[#<Token Text>, "\n"]
